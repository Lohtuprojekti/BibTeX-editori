package referenzixx.ui;

import javax.swing.table.TableModel;
import org.jbibtex.BibTeXEntry;
import org.jbibtex.Key;
import referenzixx.database.DatabaseUtils;

/**
 *
 * @author Johannes
 */
public class MainUI extends javax.swing.JFrame {
    
    private DatabaseUtils dbutils;

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        this.dbutils = new DatabaseUtils();

        initComponents();
        refresh();
    }
    
    public DatabaseUtils getDBUtils() {
        return this.dbutils;
    }
    
    public final void refresh() {
        int row = 0;
        for (BibTeXEntry entry : dbutils.getReferences()) {
            displayReference(entry, row++);
        }
    }
    
    private void displayReference(BibTeXEntry entry, int row) {
        TableModel tableModel = referenceTable.getModel();
        tableModel.setValueAt(entry.getKey().toString(), row, 0);
        tableModel.setValueAt(entry.getField(new Key("author")).toUserString(), row, 1);
        tableModel.setValueAt(entry.getField(new Key("title")).toUserString(), row, 2);
        tableModel.setValueAt(entry.getField(new Key("year")).toUserString(), row, 3);
    }

    /**
     * Lisää artikkeli käyttöliittymään.
     *
     * @param reference Lisättävä artikkeli
     */
//    public void addReference(IReference reference) {
//        references.put(reference.getRefNum(), reference);
//
//        TableModel tableModel = referenceTable.getModel();
//        tableModel.setValueAt(reference.getRefNum(), row, 0);
//        tableModel.setValueAt(reference.getAuthor(), row, 1);
//        tableModel.setValueAt(reference.getTitle(), row, 2);
//        tableModel.setValueAt(reference.getYear() + "", row, 3);
//        tableModel.setValueAt(reference.getPublisher(), row, 4);
//
//        row++;
//
//        bibtexReader.writeToFile(reference);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addReferenceButton = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        readButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        referenceTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);

        addReferenceButton.setText("Lisää");
        addReferenceButton.setToolTipText("Lisää uusi artikkeli");
        addReferenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addReferenceButtonActionPerformed(evt);
            }
        });

        copyButton.setText("Kopioi leikepöydälle");
        copyButton.setToolTipText("Kopioi BibTex-tiedoston leikepöydälle");
        copyButton.setName("copyButton"); // NOI18N
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        readButton.setText("Lue");
        readButton.setEnabled(false);
        readButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readButtonActionPerformed(evt);
            }
        });

        referenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", "", ""},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Viite", "Kirjoittaja", "Otsikko", "Vuosi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(referenceTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addReferenceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(readButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(readButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addReferenceButton)
                            .addComponent(copyButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed

        dbutils.copyToClipboard();
        
    }//GEN-LAST:event_copyButtonActionPerformed

    private void addReferenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addReferenceButtonActionPerformed
        new NewReferenceDialog(this, true).setVisible(true);
    }//GEN-LAST:event_addReferenceButtonActionPerformed

    private void readButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readButtonActionPerformed

    }//GEN-LAST:event_readButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addReferenceButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton readButton;
    private javax.swing.JTable referenceTable;
    // End of variables declaration//GEN-END:variables
}
